    acl protected-frontends hdr(host) -m reg -i ^(?i)(dash3|auth2|)\.home\.elikesbikes\.com
    acl protected-frontends-basic hdr(host) -m reg -i ^(?i)(heimdall)\.home\.elikesbikes\.com


  # Host ACLs
    acl protected-frontends hdr(host) -m reg -i ^(?i)(nextcloud)\.example\.com
    acl protected-frontends-basic hdr(host) -m reg -i ^(?i)(heimdall)\.example\.com
    acl host-authelia hdr(host) -i auth2.home.elikesbikes.com
    acl host-nextcloud hdr(host) -i nextcloud.example.com
    acl host-heimdall hdr(host) -i heimdall.example.com



     http-request set-var(txn.host) hdr(Host)

    http-request set-var(req.scheme) str(https) if { ssl_fc }
    http-request set-var(req.scheme) str(http) if !{ ssl_fc }
    http-request set-var(req.questionmark) str(?) if { query -m found }


    # Required headers
    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-Proto %[var(req.scheme)]
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Uri %[path]%[var(req.questionmark)]%[query]

    # Protect endpoints with haproxy-auth-request and Authelia
    http-request lua.auth-request be_authelia_proxy /api/verify if protected-frontends
    # Force `Authorization` header via query arg to /api/verify
    http-request lua.auth-request be_authelia_proxy /api/verify?auth=basic if protected-frontends-basic

    # Redirect protected-frontends to Authelia if not authenticated
    http-request redirect location https://auth.home.elikesbikes.com/?rd=%[var(req.scheme)]://%[base]%[var(req.questionmark)]%[query] if protected-frontends !{ var(txn.auth_response_successful) -m bool }
    # Send 401 and pass `WWW-Authenticate` header on protected-frontend-basic if not pre-authenticated
    http-request set-var(txn.auth) var(req.auth_response_header.www_authenticate) if protected-frontends-basic !{ var(txn.auth_response_successful) -m bool }
    http-response deny deny_status 401 hdr WWW-Authenticate %[var(txn.auth)] if { var(txn.host) -m reg -i ^(?i)(heimdall)\.example\.com } !{ var(txn.auth_response_successful) -m bool }
